#! /bin/sh

### BEGIN INIT INFO
# Provides:		mydlp
# Required-Start:	$local_fs $remote_fs $network $named $time mysql
# Required-Stop:	$local_fs $remote_fs $network $named $time mysql
# Should-Start:		mail-transport-agent
# Should-Stop:		mail-transport-agent
# Default-Start:	2 3 4 5
# Default-Stop:		0 1 6
# Short-Description:	An open source data loss prevention solution.
### END INIT INFO

PATH=/usr/bin:/usr/sbin:/bin:/sbin

ERLANG=/usr/bin/erl
PYTHON=/usr/bin/python

# MNESIA_OPTS="-mnesia dir '\"/var/lib/mydlp/mnesia\"'"
ERLANG_OPTS="-sname system -noshell -detached"

HOMEDIR=/etc/mydlp

PIDDIR=/var/run/mydlp
PIDFILE=$PIDDIR/mydlp.pid
PIDFILE2=$PIDDIR/backend-py.pid

SERV=/usr/sbin/service
MYSQLC=/usr/bin/mysql
MYSQLADM=/usr/bin/mysqladmin

SQUIDBIN=/usr/sbin/squid3
SQUIDBINNAME=squid3

BEACON=/usr/sbin/mydlp-beacon

. /lib/lsb/init-functions

check_piddir() {
	[ -d $PIDDIR ] || \
		mkdir -p $PIDDIR
}

is_mysql_alive() {
	$MYSQLADM -s ping >/dev/null 2>&1  
}

wait_for_mysqld() {
	for i in $(seq 10); do
	    sleep 1
	    if is_mysql_alive; then break; fi
	done
}

start_mysql() {
	is_mysql_alive || $SERV mysql start >/dev/null 2>&1 
	wait_for_mysqld
}

check_mysql_db() {
	# Import MySQL schema
	if (echo|$MYSQLC); then
		if [ -z "$(echo 'show databases'|$MYSQLC|grep -e '^mydlp$')" ]; then
			( $MYSQLADM create mydlp && \
			$MYSQLC mydlp < /usr/share/mydlp/schema/mydlp.sql && \
			echo "Initialized database 'mydlp' successfully..." && \
			echo "Please go to https://127.0.0.1/ and complete installation...") || \
			      ( echo "================================================="; \
				echo "|   A problem occured while importing schema.   |"; \
				echo "|   Please create a database and import         |"; \
				echo "|   /usr/share/mydlp/schema/mydlp.sql manually. |"; \
				echo "================================================="; \
				echo; )
		#else
			#echo "Database 'mydlp' already exists..."
		fi
	else
		echo "Cannot find mysql-client!!!"
	fi
}

start_mydlp() {
	start_mysql
	check_mysql_db

	log_daemon_msg "Starting MyDLP" "mydlp"
        if HOME=$HOMEDIR start-stop-daemon --start --quiet --oknodo --chdir $HOMEDIR --pidfile $PIDFILE --exec $ERLANG -- $ERLANG_OPTS -config mydlp-sasl -boot mydlp; then
            log_end_msg 0
        else
            log_end_msg 1
        fi
}

stop_mydlp() {
	log_daemon_msg "Stopping MyDLP" "mydlp"
        if start-stop-daemon --stop --quiet --oknodo --pidfile $PIDFILE; then
            log_end_msg 0
        else
            log_end_msg 1
        fi
}

status_mydlp() {
        status_of_proc -p $PIDFILE mydlp MyDLP 2>&1 > /dev/null 
}

cleanpids() {
	status_mydlp || rm -f $PIDFILE
	status_backend_py || rm -f $PIDFILE2
}

start_backend_py() {
	log_daemon_msg "Starting MyDLP Python Backend" "mydlp"
        if PYTHONPATH=/usr/lib/python2.6/site-packages/ start-stop-daemon --start --quiet --oknodo --pidfile $PIDFILE2 --exec $PYTHON -- /usr/lib/python2.6/dist-packages/MyDLPBackendServer.py; then
            log_end_msg 0
        else
            log_end_msg 1
        fi
}

stop_backend_py() {
	log_daemon_msg "Stopping MyDLP Python Backend" "mydlp"
        if start-stop-daemon --stop --quiet --oknodo --pidfile $PIDFILE2; then
            log_end_msg 0
        else
            log_end_msg 1
        fi
}

status_backend_py() {
        status_of_proc -p $PIDFILE2 mydlp "MyDLP Python Backend" 2>&1 > /dev/null 
}

start_beacon() {
	log_daemon_msg "Starting MyDLP Beacon" "mydlp"
        if start-stop-daemon --start --quiet --oknodo --exec $BEACON ; then
            log_end_msg 0
        else
            log_end_msg 1
        fi
}

stop_beacon() {
	log_daemon_msg "Stopping MyDLP Beacon" "mydlp"
        if start-stop-daemon --stop --quiet --oknodo --exec $BEACON; then
            rm -f /var/lock/subsys/mydlp-beacon
            log_end_msg 0
        else
            log_end_msg 1
        fi
}

status_beacon() {
        status_of_proc $BEACON mydlp "MyDLP Beacon" 2>&1 > /dev/null 
}

reload_squid() {
	SQUIDPID=$(pgrep $SQUIDBINNAME)
	if [ -n "$SQUIDPID" ]; then
		echo " * Reloading Squid..."
		[ -x $SQUIDBIN ] && $SQUIDBIN -k reconfigure
	fi
}

case "$1" in
  start)
	check_piddir
	cleanpids
	start_backend_py
	start_mydlp
	start_beacon
	cleanpids
	reload_squid
	;;
  stop)
	check_piddir
	cleanpids
	stop_beacon
	stop_mydlp
	stop_backend_py
	cleanpids
	;;

  reload|force-reload)
	;;

  restart)
	check_piddir
	cleanpids
	stop_beacon
	stop_mydlp
	stop_backend_py
	cleanpids
	start_backend_py
	start_mydlp
	start_beacon
	cleanpids
	reload_squid
	;;

  status)
	check_piddir
        status_mydlp && exit 0 || exit $?
	;;

  *)
	log_action_msg "Usage: /etc/init.d/myldp {start|stop|reload|force-reload|restart|status}"
	exit 1
esac

exit 0
