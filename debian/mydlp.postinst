#!/bin/bash 
# This script can be called in the following ways:
#
# After the package was installed:
#	<postinst> configure <old-version>
#
#
# If prerm fails during upgrade or fails on failed upgrade:
#	<old-postinst> abort-upgrade <new-version>
#
# If prerm fails during removal:
#	<old-postinst> abort-remove
#
# If prerm fails during deconfiguration of a package:
#	<postinst> abort-deconfigure in-favour <new-package> <version>
#		   removing <old-package> <version>
#
# If prerm fails during replacement due to conflict:
#	<postinst> abort-remove in-favour <new-package> <version>

OPENSSL=/usr/bin/openssl
SSLDIR=/etc/mydlp/ssl

# Generates SSL keys
generate_keys() {
	mkdir -p $SSLDIR || exit 1

	[ -e $SSLDIR/private.pem ] || $OPENSSL genrsa > $SSLDIR/private.pem

	[ -e $SSLDIR/public.pem ] || (echo -e "TR\nAnkara\nTechnopolis\nMedra Tech.\nMyDLP\n*\nrohirrim@example.com\n"| $OPENSSL req -new -x509 -key $SSLDIR/private.pem -out $SSLDIR/public.pem)
	
	return 0
}


case "$1" in
    configure)
	generate_keys
	;;

    abort-upgrade|abort-deconfigure|abort-remove)
	;;

    *)
	echo "$0 called with unknown argument \`$1'" 1>&2
	exit 1
	;;
esac

#DEBHELPER#
exit 0
