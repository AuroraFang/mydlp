#!/bin/bash 
# This script can be called in the following ways:
#
# After the package was installed:
#	<postinst> configure <old-version>
#
#
# If prerm fails during upgrade or fails on failed upgrade:
#	<old-postinst> abort-upgrade <new-version>
#
# If prerm fails during removal:
#	<old-postinst> abort-remove
#
# If prerm fails during deconfiguration of a package:
#	<postinst> abort-deconfigure in-favour <new-package> <version>
#		   removing <old-package> <version>
#
# If prerm fails during replacement due to conflict:
#	<postinst> abort-remove in-favour <new-package> <version>

OPENSSL=/usr/bin/openssl
SSLDIR=/etc/mydlp/ssl

DATEBIN=/bin/date
INIT_EPOCH=/var/lib/mydlp/init_epoch

CHOWN=/bin/chown
QUARANTINE_DIR=/var/lib/mydlp/quarantine/

MYSQLC=/usr/bin/mysql
SCHEMADIR=/usr/share/mydlp/schema/

AWKBIN=/usr/bin/awk
DPKGBIN=/usr/bin/dpkg
ECHOBIN=/bin/echo


# Generates SSL keys
generate_keys() {
	mkdir -p $SSLDIR || exit 1

	[ -e $SSLDIR/private.pem ] || $OPENSSL genrsa > $SSLDIR/private.pem

	[ -e $SSLDIR/public.pem ] || (echo -e "TR\nAnkara\nTechnopolis\nMedra Tech.\nMyDLP\n*\nrohirrim@example.com\n"| $OPENSSL req -new -x509 -key $SSLDIR/private.pem -out $SSLDIR/public.pem)
	
	return 0
}

configure_apache() {
	/usr/sbin/a2enmod ssl
	/usr/sbin/a2dissite default-ssl
	/usr/sbin/a2ensite mydlp-site
}

generate_init_epoch() {
	[ -e "$INIT_EPOCH" ] || ( $ECHOBIN -n "$($DATEBIN +%s)" > $INIT_EPOCH )
}

chown_quarantine() {
	$CHOWN -R 33.33 $QUARANTINE_DIR
}

update_mysql_schema() {
	OLDVER=$1
	while read line 
	do
		PATCHVER="$($ECHOBIN $line|$AWKBIN '{print $NF}')"
		PATCHFILE="$($ECHOBIN $line|$AWKBIN -F: '{print $1}')"
		if $DPKGBIN --compare-versions "$PATCHVER" gt "$OLDVER"; then
			$MYSQLC mydlp < $SCHEMADIR/patch/$PATCHFILE || \
				$ECHOBIN "Failed to apply MySQL patch ($PATCHFILE) automatically. Should be applied manually."
		fi
	done < $SCHEMADIR/schema_map.txt
}

case "$1" in
    configure)
	if [ -z "$2" ]; then
		generate_init_epoch
		generate_keys
		configure_apache
		chown_quarantine
	elif
		update_mysql_schema $2
	fi
	;;

    abort-upgrade|abort-deconfigure|abort-remove)
	;;

    *)
	echo "$0 called with unknown argument \`$1'" 1>&2
	exit 1
	;;
esac

#DEBHELPER#
exit 0
